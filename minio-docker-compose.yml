services:
  minio:
    image: minio/minio:latest
    container_name: minio
    restart: always
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Web UI
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
      MINIO_REGION: ${MINIO_REGION:-us-east-1}
      MINIO_BROWSER_REDIRECT_URL: ${MINIO_BROWSER_REDIRECT_URL:-http://localhost:9001}
      MINIO_SERVER_URL: ${MINIO_SERVER_URL:-http://localhost:9000}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    networks:
      - minio_network

  minio-client:
    image: minio/mc:latest
    container_name: minio-client
    depends_on:
      - minio
    environment:
      MC_HOST_minio: http://${MINIO_ROOT_USER:-minioadmin}:${MINIO_ROOT_PASSWORD:-minioadmin123}@minio:9000
    entrypoint: >
      /bin/sh -c "
      until (mc admin info minio) do echo 'Waiting for MinIO to start...' && sleep 1; done;
      mc mb minio/opencare --ignore-existing;
      mc policy set public minio/opencare;
      exit 0;
      "
    networks:
      - minio_network

volumes:
  minio_data:
    driver: local
    driver_opts:
      type: none
      device: ${MINIO_DATA_DIR:-/home/sadman/Documents/Personal/opencare-minio}
      o: bind

networks:
  minio_network:
    driver: bridge
