# Stage 1: Build the application with Maven using Java 21
FROM maven:3.9.9-eclipse-temurin-21-alpine AS build

WORKDIR /app

# Copy only the files needed for dependency resolution first
COPY pom.xml ./
# Copy the Maven wrapper files if you're using them
COPY .mvn/ .mvn
COPY mvnw .

# Download dependencies (this will cache them as a layer)
RUN mvn dependency:go-offline -B

# Copy the rest of the source code
COPY src ./src

# Build the application (include -DskipTests only for development)
RUN mvn clean package -DskipTests -B

# Stage 2: Create the final image using a smaller base image
FROM amazoncorretto:21-alpine

WORKDIR /app

# Create a non-root user and switch to it
RUN addgroup -S spring && adduser -S spring -G spring
USER spring:spring

# Copy the built JAR file from the build stage
COPY --from=build /app/target/open-care-backend-*.jar ./app.jar

# Expose the port your application runs on
EXPOSE 6500

# Allow setting environment-specific Spring profiles (default to 'dev')
ENV SPRING_PROFILES_ACTIVE=dev

# Use exec form for ENTRYPOINT and add JVM options for better container behavior
ENTRYPOINT ["java", "-XX:+UseContainerSupport", "-Djava.security.egd=file:/dev/./urandom", "-jar", "app.jar", "--spring.profiles.active=${SPRING_PROFILES_ACTIVE}"]